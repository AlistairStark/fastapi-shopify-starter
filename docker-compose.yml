version: "3.5"

services:
  api:
    build:
      context: .
    container_name: ${PROJECT_NAME}-api
    ports:
      - "8000:8000"
    volumes:
      - "$PWD:/app"
    depends_on:
      - postgres
    #   - redis
    environment:
      PROJECT_NAME: ${PROJECT_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DBS: ${POSTGRES_DBS}
      DB_URL: ${DB_URL}
      # CELERY_BROKER_URL: "${CELERY_BROKER_URL}"
      # CELERY_RESULT_BACKEND: "${CELERY_RESULT_BACKEND}"
    command: ["/bin/bash"]
    stdin_open: true
    tty: true

#   worker:
#     build: .
#     volumes:
#       - "$PWD:/app"
#     environment:
#       POSTGRES_USER: "${POSTGRES_USER}"
#       POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
#       POSTGRES_DBS: "${POSTGRES_DBS}"
#       CELERY_BROKER_URL: "${CELERY_BROKER_URL}"
#       CELERY_RESULT_BACKEND: "${CELERY_RESULT_BACKEND}"
#     depends_on:
#       - api
#       - redis
#     command: ["/bin/bash"]
#     stdin_open: true
#     tty: true

#   redis:
#     image: redis:6-alpine
#     volumes:
#       - "redis_data:/data"

  postgres:
    image: "postgres"
    container_name: ${PROJECT_NAME}-postgres
    ports:
      - "5432:5432"
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DBS: "${POSTGRES_DBS}"

volumes:
  postgres_data:
    driver: local
#   redis_data:
#     driver: local
