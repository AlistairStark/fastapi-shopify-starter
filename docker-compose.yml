version: "3.5"

services:
  api:
    build:
      context: .
    container_name: ${PROJECT_NAME}-api
    ports:
      - "8000:8000"
    volumes:
      - "$PWD:/app"
    depends_on:
      - postgres
      - redis
    environment:
      PROJECT_NAME: ${PROJECT_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DBS: ${POSTGRES_DBS}
      REDIS_URI: ${REDIS_URI}
      DB_URL: ${DB_URL}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
      SHOPIFY_APP_KEY: ${SHOPIFY_APP_KEY}
      SHOPIFY_APP_SECRET: ${SHOPIFY_APP_SECRET}
      REDIRECT_URL: ${REDIRECT_URL}
    command: ["bash", "run.sh"]

  worker:
    build: .
    volumes:
      - "$PWD:/app"
    container_name: ${PROJECT_NAME}-worker
    environment:
      PROJECT_NAME: ${PROJECT_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DBS: ${POSTGRES_DBS}
      REDIS_URI: ${REDIS_URI}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
      SHOPIFY_APP_KEY: ${SHOPIFY_APP_KEY}
      SHOPIFY_APP_SECRET: ${SHOPIFY_APP_SECRET}
      REDIRECT_URL: ${REDIRECT_URL}
    depends_on:
      - api
      - redis
    command: ["bash", "worker.sh"]

  redis:
    image: redis:6-alpine
    container_name: ${PROJECT_NAME}-redis
    volumes:
      - "redis_data:/data"

  postgres:
    image: "postgres"
    container_name: ${PROJECT_NAME}-postgres
    ports:
      - "5432:5432"
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DBS: "${POSTGRES_DBS}"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
